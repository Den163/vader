// Mocks generated by Mockito 5.0.10 from annotations
// in vader_di/test/di_container_test.dart.
// Do not manually edit this file.

import 'package:disposable_utils/src/disposable.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

import 'di_container_test.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeDisposable extends _i1.Fake implements _i2.Disposable {}

/// A class which mocks [Disposable].
///
/// See the documentation for Mockito's code generation for more information.
class MockDisposable extends _i1.Mock implements _i2.Disposable {
  MockDisposable() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [DisposableBaseResolver].
///
/// See the documentation for Mockito's code generation for more information.
class MockDisposableResolver extends _i1.Mock
    implements _i3.DisposableBaseResolver {
  MockDisposableResolver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Disposable resolve() =>
      (super.noSuchMethod(Invocation.method(#resolve, []),
          returnValue: _FakeDisposable()) as _i2.Disposable);
}

/// A class which mocks [IntBaseResolver].
///
/// See the documentation for Mockito's code generation for more information.
class MockIntResolver extends _i1.Mock implements _i3.IntBaseResolver {
  MockIntResolver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int resolve() =>
      (super.noSuchMethod(Invocation.method(#resolve, []), returnValue: 0)
          as int);
}
